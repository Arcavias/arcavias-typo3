<?xml version="1.0" encoding="UTF-8"?>

<project name="Arcavias TYPO3" default="all">

	<property name="coredir" value="${project.basedir}/vendor/arcavias/arcavias-core" />
	<property name="extdir" value="${project.basedir}/Resources/Private/Libraries/ext" />
	<property name="confdir" value="${project.basedir}/Resources/Private/Config" />
	<property name="codestddir" value="${coredir}/misc/coding" />
	


	<target name="config" description="Provides the database configuration">
		<property name="config-available" value="0" />
		<available file="${coredir}/config/resource.php" property="config-available" value="1" />
		<if>
			<equals arg1="${config-available}" arg2="0" />
			<then>
				<propertyprompt propertyName="dbhost" promptText="Database host" promptCharacter=":" useExistingValue="true"/>
				<propertyprompt propertyName="dbname" promptText="Database name" promptCharacter=":" useExistingValue="true"/>
				<propertyprompt propertyName="dbuser" promptText="Database user" promptCharacter=":" useExistingValue="true"/>
				<propertyprompt propertyName="dbpass" promptText="Database password" promptCharacter=":" useExistingValue="true"/>
				<echo file="${coredir}/config/resource.php" msg="&lt;?php return array( 'db' => array( 'adapter' => 'mysql', 'host' => '${dbhost}', 'database' => '${dbname}', 'username' => '${dbuser}', 'password' => '${dbpass}', 'limit' => 2, 'opt-persistent' => false, 'stmt' => array( 'SET NAMES \'utf8\'', 'SET SESSION sql_mode=\'ANSI\'' ) ) );" />
			</then>
		</if>
		<copy file="${coredir}/config/resource.php" tofile="${coredir}/lib/mwlib/config/resource.php" overwrite="true" />
	</target>

	<target name="setup" depends="config" description="Sets up database incl. unit test data">
		<echo msg="Setting up test database" />
		<exec command="php ${coredir}/setup.php --config=${confdir} --config=${coredir}/config --extdir=${extdir} unittest" checkreturn="true" logoutput="true"/>
	</target>

	<target name="setupperf" depends="config" description="Sets up database incl. performance test data">
		<echo msg="Setting up performance data" />
		<exec command="php ${coredir}/setup.php --config=${confdir} --config=${coredir}/config --extdir=${extdir} unitperf" checkreturn="true" logoutput="true"/>
	</target>


	<target name="coverage" description="Creates coverage reports">
		<phing target="coverage" haltonfailure="true" dir="${coredir}" />
		<phing target="coverage" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="test" description="Executes unit tests">
		<phing target="test" haltonfailure="true" dir="${coredir}" />
		<phing target="test" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>

	<target name="testperf" description="Executes performance tests">
		<phing target="testperf" haltonfailure="true" dir="${coredir}" />
		<phing target="testperf" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="check" description="Executes all checks">
		<phing target="check" dir="${coredir}" />
		<phing target="check">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="clean" description="Cleans up temporary files">
		<delete file="${coredir}/config/resource.php" quiet="true" />
		<delete file="${coredir}/lib/mwlib/config/resource.php" quiet="true" />
		<phing target="clean" dir="${coredir}" />
		<phing target="clean">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<include name="**/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="update" description="Updates the Arcavias core">
		<exec command="git pull" checkreturn="true" logoutput="true" />
		<exec command="composer update" checkreturn="true" logoutput="true" />
		<copy todir="Resources/Public/html/">
			<fileset dir="${coredir}/client/html/lib/" expandsymboliclinks="true" />
		</copy>
	</target>


	<target name="deploy" description="Executes all deployments" depends="clean">
		<propertyprompt propertyName="version" promptText="Enter release version" promptCharacter=":" useExistingValue="true"/>
		<reflexive>
		  <fileset dir="." includes="ext_emconf.php" />
		  <filterchain>
		    <replaceregexp>
		      <regexp pattern="'version' => '[^']*'" replace="'version' => '${version}'"/>
		    </replaceregexp>
		  </filterchain>
		</reflexive>
		<symlink target="${project.basedir}" link="../arcavias" />
		<exec command="tar -c -h --bzip2 --exclude-vcs -C ../ -f ../arcavias-typo3_${version}.tar.bz2 arcavias"
			checkreturn="true" logoutput="true"/>
		<delete file="../arcavias" />
		<filehash file="../arcavias-typo3_${version}.tar.bz2" hashtype="1" />
		<echo msg="SHA1 hash value: ${filehashvalue}" />
	</target>


	<target name="all" depends="setup,test,check,clean" description="Executes all essential targets for testing" />

</project>
